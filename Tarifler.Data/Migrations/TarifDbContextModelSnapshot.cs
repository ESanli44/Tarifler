// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tarifler.Data;

#nullable disable

namespace Tarifler.Data.Migrations
{
    [DbContext(typeof(TarifDbContext))]
    partial class TarifDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tarifler.Core.Entity.Begeni", b =>
                {
                    b.Property<int>("BegeniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BegeniId"));

                    b.Property<bool>("Begen")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("YemekTarifId")
                        .HasColumnType("int");

                    b.HasKey("BegeniId");

                    b.HasIndex("UserId");

                    b.HasIndex("YemekTarifId");

                    b.ToTable("Begeniler");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriId"));

                    b.Property<string>("KategoriAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            KategoriId = 1,
                            KategoriAciklama = "Ana Yemekler",
                            KategoriAdi = "Ana Yemek"
                        },
                        new
                        {
                            KategoriId = 2,
                            KategoriAciklama = "Ara Sıcaklar",
                            KategoriAdi = "Ara Sıcak"
                        },
                        new
                        {
                            KategoriId = 3,
                            KategoriAciklama = "Başlangıçlar",
                            KategoriAdi = "Başlangıç"
                        },
                        new
                        {
                            KategoriId = 4,
                            KategoriAciklama = "Tatlılar",
                            KategoriAdi = "Tatlı"
                        });
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Like", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LikeId"));

                    b.Property<bool>("Liked")
                        .HasColumnType("bit");

                    b.Property<int?>("TarifId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("YemekTarifTarifId")
                        .HasColumnType("int");

                    b.HasKey("LikeId");

                    b.HasIndex("UserId");

                    b.HasIndex("YemekTarifTarifId");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Mesaj", b =>
                {
                    b.Property<int>("MesajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesajId"));

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MesajAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("MesajId");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Slider", b =>
                {
                    b.Property<int>("SliderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SliderId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SliderId");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Tur", b =>
                {
                    b.Property<int>("TurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurId"));

                    b.Property<string>("TurAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TurAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TurId");

                    b.ToTable("Turler");

                    b.HasData(
                        new
                        {
                            TurId = 1,
                            TurAciklama = "Et Yemekleri",
                            TurAdi = "Et"
                        },
                        new
                        {
                            TurId = 2,
                            TurAciklama = "Balık Yemekleri",
                            TurAdi = "Balık"
                        },
                        new
                        {
                            TurId = 3,
                            TurAciklama = "Tavuk Yemekleri",
                            TurAdi = "Tavuk"
                        },
                        new
                        {
                            TurId = 4,
                            TurAciklama = "Sebze Yemekleri",
                            TurAdi = "Sebze"
                        },
                        new
                        {
                            TurId = 5,
                            TurAciklama = "Çorba Yemekleri",
                            TurAdi = "Çorba"
                        });
                });

            modelBuilder.Entity("Tarifler.Core.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGuest")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMember")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Emrah",
                            IsActive = true,
                            IsAdmin = true,
                            IsGuest = false,
                            IsMember = false,
                            LastName = "Şanlı",
                            UserEmail = "Esanli@gmail.com",
                            UserName = "Esanli",
                            UserPassword = "Emrah.123",
                            UserPhone = "11111111111"
                        },
                        new
                        {
                            UserId = 2,
                            FirstName = "Aylin",
                            IsActive = true,
                            IsAdmin = false,
                            IsGuest = false,
                            IsMember = true,
                            LastName = "Şanlı",
                            UserEmail = "Asanli@gmail.com",
                            UserName = "Asanli",
                            UserPassword = "Aylin.123",
                            UserPhone = "11111111111"
                        },
                        new
                        {
                            UserId = 3,
                            FirstName = "Umay",
                            IsActive = true,
                            IsAdmin = false,
                            IsGuest = false,
                            IsMember = true,
                            LastName = "Şanlı",
                            UserEmail = "Usanli@gmail.com",
                            UserName = "Usanli",
                            UserPassword = "Umay.123",
                            UserPhone = "11111111111"
                        },
                        new
                        {
                            UserId = 4,
                            FirstName = "Zehra",
                            IsActive = true,
                            IsAdmin = false,
                            IsGuest = true,
                            IsMember = false,
                            LastName = "Şanlı",
                            UserEmail = "Zsanli@gmail.com",
                            UserName = "Zsanli",
                            UserPassword = "Zehra.123",
                            UserPhone = "11111111111"
                        });
                });

            modelBuilder.Entity("Tarifler.Core.Entity.YemekTarif", b =>
                {
                    b.Property<int>("TarifId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarifId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Malzeme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sure")
                        .HasColumnType("int");

                    b.Property<string>("TarifAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TurId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("kisiSayisi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TarifId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("TurId");

                    b.HasIndex("UserId");

                    b.ToTable("YemekTarifleri");

                    b.HasData(
                        new
                        {
                            TarifId = 1,
                            Aciklama = "Aciklama",
                            Baslik = "İmam bayıldı",
                            IsActive = true,
                            KategoriId = 1,
                            Malzeme = "Tuz, Patlıcan, Lıyma, Domatez",
                            Sure = 15,
                            TarifAciklama = "Tarif",
                            TurId = 4,
                            UserId = 1,
                            kisiSayisi = "4-6"
                        },
                        new
                        {
                            TarifId = 2,
                            Aciklama = "Aciklama",
                            Baslik = "Kebap",
                            IsActive = true,
                            KategoriId = 1,
                            Malzeme = "Tuz, Kıyma, Biber",
                            Sure = 10,
                            TarifAciklama = "Tarif",
                            TurId = 1,
                            UserId = 2,
                            kisiSayisi = "4-6"
                        });
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Yorum", b =>
                {
                    b.Property<int>("YorumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YorumId"));

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YayinTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YemekTarifId")
                        .HasColumnType("int");

                    b.HasKey("YorumId");

                    b.HasIndex("UserId");

                    b.HasIndex("YemekTarifId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Begeni", b =>
                {
                    b.HasOne("Tarifler.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Tarifler.Core.Entity.YemekTarif", "YemekTarif")
                        .WithMany("Begeniler")
                        .HasForeignKey("YemekTarifId");

                    b.Navigation("User");

                    b.Navigation("YemekTarif");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Like", b =>
                {
                    b.HasOne("Tarifler.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Tarifler.Core.Entity.YemekTarif", "YemekTarif")
                        .WithMany("Likes")
                        .HasForeignKey("YemekTarifTarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("YemekTarif");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.YemekTarif", b =>
                {
                    b.HasOne("Tarifler.Core.Entity.Kategori", "Kategori")
                        .WithMany("YemekTarifleri")
                        .HasForeignKey("KategoriId");

                    b.HasOne("Tarifler.Core.Entity.Tur", "Tur")
                        .WithMany("YemekTarifleri")
                        .HasForeignKey("TurId");

                    b.HasOne("Tarifler.Core.Entity.User", "User")
                        .WithMany("YemekTarifleri")
                        .HasForeignKey("UserId");

                    b.Navigation("Kategori");

                    b.Navigation("Tur");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Yorum", b =>
                {
                    b.HasOne("Tarifler.Core.Entity.User", "User")
                        .WithMany("Yorumlar")
                        .HasForeignKey("UserId");

                    b.HasOne("Tarifler.Core.Entity.YemekTarif", "YemekTarif")
                        .WithMany("Yorumlar")
                        .HasForeignKey("YemekTarifId");

                    b.Navigation("User");

                    b.Navigation("YemekTarif");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Kategori", b =>
                {
                    b.Navigation("YemekTarifleri");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.Tur", b =>
                {
                    b.Navigation("YemekTarifleri");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.User", b =>
                {
                    b.Navigation("YemekTarifleri");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("Tarifler.Core.Entity.YemekTarif", b =>
                {
                    b.Navigation("Begeniler");

                    b.Navigation("Likes");

                    b.Navigation("Yorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
